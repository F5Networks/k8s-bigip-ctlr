stages:
  - Build
#  - Test
#  - Test-cluster-mode
#  - Test-nodeport-mode

Build-Image:
  tags: 
    - docker-executor
  stage: Build
  image: ${DOCKER_BUILDER}
  
  script:
    - apk update
    - apk add git make python coreutils bash sudo
    - if [ "$DOCKER_NAMESPACE" == "" ]; then DOCKER_NAMESPACE="local"; fi
    - export BASE_PUSH_TARGET="$DOCKER_NAMESPACE/k8s-bigip-ctlr"
    - |
      if [ "$DOCKER_P" == "" -o "$DOCKER_U" == "" -o $DOCKER_NAMESPACE == "" ]; then
        echo "[INFO] Docker user, password, or namespace vars absent from travis-ci."
        echo "[INFO] See README.md section 'build' to configure travis with DockerHub."
      else
        docker login -u="$DOCKER_U" -p="$DOCKER_P"
        DOCKER_READY="true"
      fi
    - export BUILD_VERSION=$(build-tools/version-tool version)
    - export BUILD_INFO=$(build-tools/version-tool build-info)
    - if [ "$CI_COMMIT_TAG" == "$CI_COMMIT_REF_NAME" ]; then BUILD_VERSION=$CI_COMMIT_TAG; fi
    - export IMG_TAG="${BASE_PUSH_TARGET}:${CI_COMMIT_SHA}"
    - export BUILD_IMG_TAG="${BASE_PUSH_TARGET}-devel:${CI_COMMIT_SHA}"
    - export BUILD_STAMP=devel-$CI_COMMIT_REF_NAME-n-$CI_CONCURRENT_PROJECT_ID-id-$CI_CONCURRENT_ID-$(date +%s)
    - export USER=$(whoami)
    - |
      if [[ "$CI_COMMIT_REF_NAME" == *"-stable" ]]; then
        CTLR_VERSION=v$(echo $CI_COMMIT_REF_NAME | sed s/-stable//g)
        export CTLR_VERSION
        export LICENSE_STRICT=false
      elif [[ "$CI_COMMIT_REF_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]* ]]; then
        va=( "${CI_COMMIT_REF_NAME//./ }" ) # replace decimals and split into array
        export CTLR_VERSION="${va[0]}.${va[1]}"
        export LICENSE_STRICT=true
      else
        export CTLR_VERSION=$CI_COMMIT_REF_NAME
        export LICENSE_STRICT=false
      fi
    - export CLEAN_BUILD=true
    - export BASE_OS=debian
    - make verify
    - make prod
#    - adduser -D user -s /bin/bash
#    - bash -c "make prod-build"
#    - git clone https://github.com/F5Networks/k8s-bigip-ctlr.git
#    - cd k8s-bigip-ctlr
#    - bash -c "make prod-build"
#    - docker tag ${SOURCE_IMAGE} ${BUILD_TAG}
#    - docker push ${TARGET_IMAGE}

#Run-Regression:
#  tags:
#    - docker-executor
#  stage: Test
#  image: centos
#  script:
#    - sudo yum upgrade openssh -y
#    - sudo yum install wget, make, openssh, python, py-pip, gcc, python2-dev, musl-dev, libffi-dev, openssl-dev -y
#    - sudo pip install ansible==2.6.5
