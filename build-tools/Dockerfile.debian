FROM golang:1.15 as builder

ARG REPOPATH=$GOPATH/src/github.com/F5Networks/k8s-bigip-ctlr
ARG RUN_TESTS
ARG COVERALLS_TOKEN
ARG BUILD_VERSION
ARG BUILD_INFO

WORKDIR $REPOPATH
ENV GO111MODULE on
COPY . .

RUN $REPOPATH/build-tools/rel-build.sh

FROM python:3.10-slim-buster

ENV APPPATH /app

ARG BUILD_VERSION
ARG BUILD_INFO

WORKDIR $APPPATH

COPY requirements.txt /tmp/requirements.txt
RUN mkdir -p "$APPPATH/bin" "$APPPATH/vendor/src/f5/schemas/" \
    && touch $APPPATH/vendor/src/f5/VERSION_BUILD.json \
    && chmod -R 755 "$APPPATH" \
    && adduser --disabled-password --gecos "" ctlr \
    && apt-get update && apt-get install -y --no-install-recommends git \
    && apt-get upgrade -y \
    && pip install --no-cache-dir --upgrade pip==20.0.2 \
    && pip install --no-cache-dir -r /tmp/requirements.txt \
    && apt-get remove -y git \
    # FIXME: Remove this fix once libidn is no longer vulnerable
    && apt-get remove -y libidn11 \
    && echo "{\"version\": \"${BUILD_VERSION}\", \"build\": \"${BUILD_INFO}\"}" > $APPPATH/vendor/src/f5/VERSION_BUILD.json

COPY schemas/*.json $APPPATH/vendor/src/f5/schemas/
COPY --from=builder /bin/k8s-bigip-ctlr $APPPATH/bin
COPY LICENSE /licenses/


# Enable CN Certificate validation 
ENV GODEBUG x509ignoreCN=0

USER ctlr

# Run the run application in the projects bin directory.
CMD [ "/app/bin/k8s-bigip-ctlr" ]
