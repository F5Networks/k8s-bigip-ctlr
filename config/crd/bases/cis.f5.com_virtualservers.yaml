---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: virtualservers.cis.f5.com
spec:
  group: cis.f5.com
  names:
    kind: VirtualServer
    listKind: VirtualServerList
    plural: virtualservers
    shortNames:
    - vs
    singular: virtualserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: hostname
      jsonPath: .spec.host
      name: host
      type: string
    - description: TLS Profile attached
      jsonPath: .spec.tlsProfileName
      name: tlsProfileName
      type: string
    - description: Http Traffic Termination
      jsonPath: .spec.httpTraffic
      name: httpTraffic
      type: string
    - description: IP address of virtualServer
      jsonPath: .spec.virtualServerAddress
      name: IPAddress
      type: string
    - description: ipamLabel for virtual server
      jsonPath: .spec.ipamLabel
      name: ipamLabel
      type: string
    - description: IP address of virtualServer
      jsonPath: .status.vsAddress
      name: IPAMVSAddress
      type: string
    - description: status of VirtualServer
      jsonPath: .status.status
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              additionalVirtualServerAddresses:
                items:
                  pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                  type: string
                type: array
              allowSourceRange:
                items:
                  type: string
                type: array
              allowVlans:
                items:
                  pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.]+\/?)*$
                  type: string
                type: array
              bigipRouteDomain:
                format: int32
                maximum: 65535
                minimum: 0
                type: integer
              botDefense:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
              connectionMirroring:
                enum:
                - none
                - L4
                type: string
              defaultPool:
                properties:
                  loadBalancingMethod:
                    pattern: ^[a-z]+[a-z_-]+[a-z]+$
                    type: string
                  monitors:
                    items:
                      properties:
                        interval:
                          type: integer
                        name:
                          pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                          type: string
                        recv:
                          type: string
                        reference:
                          enum:
                          - bigip
                          type: string
                        send:
                          type: string
                        sslProfile:
                          pattern: ^\/([A-z0-9-_+]+\/)+([A-z0-9]+\/?)*$
                          type: string
                        targetPort:
                          format: int32
                          type: integer
                        timeout:
                          type: integer
                        type:
                          type: string
                      type: object
                    type: array
                  name:
                    pattern: ^\/[a-zA-Z]+([A-z0-9-._+]+\/)+([-A-z0-9_.:]+\/?)*$
                    type: string
                  nodeMemberLabel:
                    pattern: ^[a-zA-Z0-9][-A-Za-z0-9_.\/]{0,61}[a-zA-Z0-9]=(\s?|""|[a-zA-Z0-9][-A-Za-z0-9_.]{0,61}[a-zA-Z0-9])$
                    type: string
                  reference:
                    enum:
                    - bigip
                    - service
                    type: string
                  reselectTries:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  service:
                    pattern: '[a-z]([-a-z0-9]*[a-z0-9])?'
                    type: string
                  serviceDownAction:
                    type: string
                  serviceNamespace:
                    pattern: ^[a-zA-Z]+([-A-z0-9_.+:])*([A-z0-9])+$
                    type: string
                  servicePort:
                    anyOf:
                    - type: integer
                    - type: string
                    x-kubernetes-int-or-string: true
                required:
                - reference
                type: object
              dos:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
              host:
                pattern: ^(([a-zA-Z0-9\*]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
                type: string
              hostAliases:
                items:
                  pattern: ^(([a-zA-Z0-9\*]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
                  type: string
                type: array
              hostGroup:
                pattern: ^[a-zA-Z]+[-A-z0-9_.:]*[A-z0-9]*$
                type: string
              hostGroupVirtualServerName:
                pattern: ^[a-zA-Z]+([A-z0-9-._+])*([A-z0-9])$
                type: string
              hostPersistence:
                properties:
                  metaData:
                    properties:
                      expiry:
                        pattern: ^((?:(?:[0-9]+d))|(?:(?:[0-9]+d)?((?:[01]?[0-9]|2[0-3]):[0-5][0-9](?::[0-5][0-9])?)))$
                        type: string
                      key:
                        type: string
                      length:
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      name:
                        type: string
                      netmask:
                        pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                        type: string
                      offset:
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      timeout:
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                    type: object
                  method:
                    enum:
                    - sourceAddress
                    - destinationAddress
                    - cookieInsert
                    - cookieRewrite
                    - cookiePassive
                    - cookieHash
                    - universal
                    - hash
                    - carp
                    - none
                    type: string
                required:
                - method
                type: object
              htmlProfile:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
              httpCompressionProfile:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
              httpMrfRoutingEnabled:
                type: boolean
              httpTraffic:
                enum:
                - allow
                - none
                - redirect
                type: string
              iRules:
                items:
                  pattern: ^none$|^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                  type: string
                type: array
              ipamLabel:
                pattern: ^[a-zA-Z]+[-A-z0-9_.:]+[A-z0-9]+$
                type: string
              partition:
                pattern: ^[a-zA-Z]+[-A-z0-9_.]+$
                type: string
              persistenceProfile:
                pattern: ^\/?[a-zA-Z]+([-A-z0-9_+]+\/)*([-A-z0-9_.:]+\/?)*$
                type: string
              policyName:
                pattern: ^[a-zA-Z]+[-A-z0-9_.:]+[A-z0-9]+$
                type: string
              policyPerRequestAccess:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
              pools:
                items:
                  properties:
                    alternateBackends:
                      items:
                        properties:
                          service:
                            pattern: '[a-z]([-a-z0-9]*[a-z0-9])?'
                            type: string
                          serviceNamespace:
                            pattern: ^[a-zA-Z]+([-A-z0-9_.+:])*([A-z0-9])+$
                            type: string
                          weight:
                            format: int32
                            maximum: 256
                            minimum: 0
                            type: integer
                        required:
                        - service
                        type: object
                      type: array
                    hostRewrite:
                      pattern: ^(([a-zA-Z0-9\*]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
                      type: string
                    loadBalancingMethod:
                      pattern: ^[a-z]+[a-z_-]+[a-z]+$
                      type: string
                    minimumMonitors:
                      anyOf:
                      - type: integer
                      - type: string
                      x-kubernetes-int-or-string: true
                    monitor:
                      properties:
                        interval:
                          type: integer
                        name:
                          pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                          type: string
                        recv:
                          type: string
                        reference:
                          enum:
                          - bigip
                          type: string
                        send:
                          type: string
                        sslProfile:
                          pattern: ^\/([A-z0-9-_+]+\/)+([A-z0-9]+\/?)*$
                          type: string
                        targetPort:
                          format: int32
                          type: integer
                        timeout:
                          type: integer
                        type:
                          type: string
                      type: object
                    monitors:
                      items:
                        properties:
                          interval:
                            type: integer
                          name:
                            pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                            type: string
                          recv:
                            type: string
                          reference:
                            enum:
                            - bigip
                            type: string
                          send:
                            type: string
                          sslProfile:
                            pattern: ^\/([A-z0-9-_+]+\/)+([A-z0-9]+\/?)*$
                            type: string
                          targetPort:
                            format: int32
                            type: integer
                          timeout:
                            type: integer
                          type:
                            type: string
                        type: object
                      type: array
                    multiClusterServices:
                      items:
                        description: MultiClusterServiceWrapper is a Wrapper around
                          MultiClusterServiceReference that makes ServicePort required
                        properties:
                          clusterName:
                            type: string
                          namespace:
                            type: string
                          service:
                            pattern: '[a-z]([-a-z0-9]*[a-z0-9])?'
                            type: string
                          servicePort:
                            allOf:
                            - anyOf:
                              - type: integer
                              - type: string
                            - anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                          weight:
                            maximum: 256
                            minimum: 0
                            type: integer
                        required:
                        - clusterName
                        - namespace
                        - service
                        - servicePort
                        type: object
                      type: array
                    name:
                      pattern: ^[a-zA-Z]+([-A-z0-9_.+:])*([A-z0-9])+$
                      type: string
                    nodeMemberLabel:
                      pattern: ^[a-zA-Z0-9][-A-Za-z0-9_.\/]{0,61}[a-zA-Z0-9]=(\s?|""|[a-zA-Z0-9][-A-Za-z0-9_.]{0,61}[a-zA-Z0-9])$
                      type: string
                    path:
                      pattern: ^\/([A-z0-9-_+]+\/)*([-A-z0-9_.:]+\/?)*$
                      type: string
                    reselectTries:
                      format: int32
                      maximum: 65535
                      minimum: 0
                      type: integer
                    rewrite:
                      pattern: ^\/([A-z0-9-_+]+\/)*([-A-z0-9_.:]+\/?)*$
                      type: string
                    service:
                      pattern: '[a-z]([-a-z0-9]*[a-z0-9])?'
                      type: string
                    serviceDownAction:
                      type: string
                    serviceNamespace:
                      pattern: ^[a-zA-Z]+([-A-z0-9_.+:])*([A-z0-9])+$
                      type: string
                    servicePort:
                      anyOf:
                      - type: integer
                      - type: string
                      x-kubernetes-int-or-string: true
                    waf:
                      pattern: ^\/([A-z0-9-_+]+\/)+([A-z0-9]+\/?)*$
                      type: string
                    weight:
                      format: int32
                      maximum: 256
                      minimum: 0
                      type: integer
                  type: object
                type: array
              profileAccess:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
              profileAdapt:
                properties:
                  request:
                    pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                    type: string
                  response:
                    pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                    type: string
                type: object
              profileMultiplex:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
              profiles:
                properties:
                  http2:
                    properties:
                      client:
                        pattern: ^\/([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                        type: string
                      server:
                        pattern: ^\/([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                        type: string
                    type: object
                  tcp:
                    properties:
                      client:
                        pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                        type: string
                      server:
                        pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                        type: string
                    type: object
                type: object
              rewriteAppRoot:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)*([-A-z0-9_.:]+\/?)*$
                type: string
              serviceAddress:
                items:
                  properties:
                    arpEnabled:
                      type: boolean
                    icmpEcho:
                      enum:
                      - enable
                      - disable
                      - selective
                      type: string
                    routeAdvertisement:
                      enum:
                      - enable
                      - disable
                      - selective
                      - always
                      - any
                      - all
                      type: string
                    spanningEnabled:
                      type: boolean
                    trafficGroup:
                      pattern: ^\/([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                      type: string
                  type: object
                maxItems: 1
                type: array
              snat:
                pattern: ^$|^\/?[a-zA-Z]+([-A-z0-9_+]+\/)*([-A-z0-9_.:]+\/?)+$
                type: string
              tlsProfileName:
                pattern: ^[a-zA-Z]+[-A-z0-9_.:]+[A-z0-9]+$
                type: string
              virtualServerAddress:
                pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[
                  PSYCH!0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
                type: string
              virtualServerHTTPPort:
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              virtualServerHTTPSPort:
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              virtualServerName:
                pattern: ^[a-zA-Z]+([A-z0-9-._+])*([A-z0-9])$
                type: string
              waf:
                pattern: ^\/[a-zA-Z]+([A-z0-9-_+]+\/)+([-A-z0-9_.:]+\/?)*$
                type: string
            type: object
            x-kubernetes-validations:
            - message: The partition cannot be 'Common' if specified.
              rule: '!has(self.partition) || self.partition != ''Common'''
            - message: partition cannot be modified. Delete the resource and recreate
                with new partition
              rule: has(self.partition) == has(oldSelf.partition) && (!has(self.partition)
                || self.partition == oldSelf.partition)
            - message: '''serviceAddress'' cannot be added when it is not already
                present.'
              rule: '!(has(self.serviceAddress) && !has(oldSelf.serviceAddress))'
            - message: '''serviceAddress'' cannot be deleted when it is present.'
              rule: '!(has(oldSelf.serviceAddress) && !has(self.serviceAddress))'
            - message: either ipamLabel or virtualServerAddress needs to be specified.
              rule: has(self.ipamLabel) || has(self.virtualServerAddress)
          status:
            properties:
              error:
                type: string
              lastUpdated:
                format: date-time
                type: string
              status:
                type: string
              vsAddress:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
