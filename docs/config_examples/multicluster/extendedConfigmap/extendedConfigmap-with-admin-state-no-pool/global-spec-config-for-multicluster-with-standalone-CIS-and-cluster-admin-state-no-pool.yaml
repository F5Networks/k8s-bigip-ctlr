# Example for the usage of adminState with no-pool value in the extendedConfigmap in case of standalone CIS.

# adminState can be provided for a cluster to mark the state of a particular cluster.
# Supported values for adminState are [enable, disable, offline]
# By default clusters are in enabled state.
# adminState: enable, all new connections are allowed to the pool members from the cluster.
# adminState: disable, all new connections except those which match an existing persistence session are not allowed for the pool members from the cluster.
# adminState: offline, no new connections are allowed to the pool members from the cluster, even if they match an existing persistence session.
# adminState: in ratio mode, a service pool is not created for the affected cluster. For all other modes, pool members from the cluster are not added to the service pool. This configuration is helpful when we don't want to add pool or pool members from a particular cluster due to any reasons(for example cluster is under maintenance).

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    f5nr: "true"
  name: extended-spec-config
  namespace: kube-system
data:
  extendedSpec: |
    mode: ratio # mode parameter can be removed if ratio mode is not required
    localClusterAdminState: no-pool # This applies to the local cluster wherever the CIS is running. Other supported values are enable, disable and offline
    externalClustersConfig:
    - clusterName: cluster3
      secret: default/kubeconfig3
      adminState: offline
    - clusterName: cluster4
      secret: default/kubeconfig4
      adminState: no-pool
    extendedRouteSpec:
    - allowOverride: false
      namespace: foo
      policyCR: foo/cr-policy1
      vserverAddr: 10.8.0.4
      vserverName: vs-foo
